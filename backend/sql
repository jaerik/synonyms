[7:38 AM] Erik Jansson

docker network create example-app



docker run --name mysql -d \

    -e MYSQL_ROOT_PASSWORD=pass\

    -e MYSQL_EXAMPLE_USER_PASSWORD=pass

    -v mysql:/var/lib/mysql \

    --network example-app \

    mysql:8



docker run -it --network example-app --rm mysql:8 mysql -hmysql -uroot -p





CREATE DATABASE test;



USE test;



CREATE TABLE word (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    chars TEXT NOT NULL

);



CREATE TABLE synonym2 (
   id INTEGER PRIMARY KEY AUTO_INCREMENT,

   word_id1 INTEGER NOT NULL,

   word_id2 INTEGER NOT NULL,

   FOREIGN KEY (word_id1) REFERENCES word (id),

   FOREIGN KEY (word_id2) REFERENCES word (id)

);


check if exists

SELECT COUNT(1)
FROM word w
WHERE w.chars = 'stor';


INSERT INTO word2 (chars)
VALUES ('stor');

INSERT INTO word (chars)
VALUES ('stor');


INSERT INTO word (chars)
VALUES ('diger')

INSERT INTO word (chars)
VALUES ('enorm')

INSERT INTO word (id, chars)
VALUES (4, 'fet');

INSERT INTO word (id, chars)
VALUES (5, 'grov');

INSERT INTO word (id, chars)
VALUES (6, 'liten');

INSERT INTO word (id, chars)
VALUES (7, 'oansenlig');


INSERT INTO synonym2 (word_id1, word_id2)
SELECT w1.id, w2.id
FROM word w1, word w2
WHERE w1.chars = 'stor' AND w2.chars = 'diger';


INSERT INTO synonym2 (word_id1, word_id2)
SELECT w1.id, w2.id
FROM word w1, word w2
WHERE w1.chars = 'diger' AND w2.chars = 'enorm';


INSERT INTO synonym2 (word_id1, word_id2)
SELECT w1.id, w2.id
FROM word w1, word w2
WHERE w1.chars = 'diger' AND w2.chars = 'fet';


INSERT INTO synonym2 (word_id1, word_id2)
SELECT w1.id, w2.id
FROM word w1, word w2
WHERE w1.chars = 'fet' AND w2.chars = 'grov';


INSERT INTO synonym2 (word_id1, word_id2)
SELECT w1.id, w2.id
FROM word w1, word w2
WHERE w1.chars = 'liten' AND w2.chars = 'oansenlig';


WITH RECURSIVE syn_rec(word_id1, word_id2, level) AS (
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id1 = (SELECT id FROM word WHERE chars = 'diger')
   UNION ALL
   SELECT synonym2.word_id1, synonym2.word_id2, syn_rec.level + 1
   FROM syn_rec
   JOIN synonym2 ON syn_rec.word_id2 = synonym2.word_id1
)
SELECT word.chars
FROM syn_rec
JOIN word ON syn_rec.word_id2 = word.id;


=================================================================

WITH RECURSIVE syn_rec(word_id1, word_id2, level) AS (
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id2 = (SELECT id FROM word WHERE chars = 'diger')
   UNION ALL
   SELECT s.word_id1, s.word_id2, r.level + 1
   FROM syn_rec r
   JOIN synonym2 s
   ON r.word_id1 = s.word_id1 AND NOT (r.word_id2 = s.word_id2)
   WHERE r.level < 5
)
SELECT word.chars
FROM syn_rec
JOIN word
ON syn_rec.word_id1 = word.id;

WITH RECURSIVE syn_rec(word_id1, word_id2, level) AS (
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id1 = (SELECT id FROM word WHERE chars = 'diger')
   UNION ALL
   SELECT s.word_id1, s.word_id2, r.level + 1
   FROM syn_rec r
   JOIN synonym2 s
   ON r.word_id2 = s.word_id2 AND NOT (r.word_id1 = s.word_id1)
   WHERE r.level < 5
)
SELECT word.chars
FROM syn_rec
JOIN word
ON syn_rec.word_id2 = word.id;

====================================================================

---------------------------------------------------TEST
WITH RECURSIVE syn_rec(w_id1, w_id2, level) AS (
   SELECT word_id2, word_id1, 1
   FROM synonym2
   WHERE word_id2 = (SELECT id FROM word WHERE chars = 'diger')
   UNION ALL
   SELECT s.word_id2, s.word_id1, r.level + 1
   FROM syn_rec r
   JOIN synonym2 s
   ON r.w_id1 = s.word_id1
   WHERE r.level < 5
)
SELECT *
FROM syn_rec
JOIN word
ON syn_rec.w_id1 = word.id;


************************************************************************

WITH RECURSIVE syn_rec(w_id1, w_id2, level) AS (
   SELECT word_id2, word_id1, 1
   FROM synonym2
   WHERE word_id2 = (SELECT id FROM word WHERE chars = 'oansenlig')
   UNION ALL
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id1 = (SELECT id FROM word WHERE chars = 'oansenlig')
   UNION ALL
   SELECT s.word_id2, s.word_id1, r.level + 1
   FROM syn_rec r
   JOIN synonym2 s
   ON r.w_id2 = s.word_id2 AND NOT r.w_id1 = s.word_id1
   WHERE r.level < 10
   UNION ALL
   SELECT s.word_id1, s.word_id2, r.level + 1
   FROM syn_rec r
   JOIN synonym2 s
   ON r.w_id2 = s.word_id1 AND NOT r.w_id1 = s.word_id2
   WHERE r.level < 10
)
SELECT word.chars
FROM syn_rec
JOIN word
ON syn_rec.w_id2 = word.id;


************************************************************************




WITH RECURSIVE syn_rec(w_id1, w_id2, level) AS (
   SELECT word_id2, word_id1, 1
   FROM synonym2
   WHERE word_id2 = (SELECT id FROM word WHERE chars = 'diger')
   UNION ALL
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id1 = (SELECT id FROM word WHERE chars = 'diger')
   UNION ALL
   SELECT s2.word_id1, s2.word_id2, 10
   FROM synonym2 s2
   UNION ALL
   SELECT r.w_id1, r.w_id2, r.level + 1
   FROM syn_rec r
   JOIN synonym2 s
   WHERE r.level < 2
)
SELECT *
FROM syn_rec
JOIN word
ON syn_rec.w_id2 = word.id;



-------------------------------------------------------







SELECT word.chars
SELECT *
FROM synonym2
JOIN word AS word1 ON synonym2.word_id1 = word1.id
JOIN word AS word2 ON synonym2.word_id2 = word2.id
WHERE word1.chars = 'diger' OR word2.chars = 'diger';





WITH RECURSIVE syn_rec(word_id1, word_id2, level) AS (
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id1 = (SELECT id FROM word WHERE chars = 'grov')
   UNION ALL
   SELECT synonym2.word_id1, synonym2.word_id2, syn_rec.level + 1
   FROM syn_rec
   JOIN synonym2 ON syn_rec.word_id2 = synonym2.word_id1
   WHERE syn_rec.level < 5
   UNION ALL
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id2 = (SELECT id FROM word WHERE chars = 'grov')
   UNION ALL
   SELECT synonym2.word_id1, synonym2.word_id2, syn_rec.level + 1
   FROM syn_rec
   JOIN synonym2 ON syn_rec.word_id1 = synonym2.word_id1
   WHERE syn_rec.level < 5
)
SELECT word.chars
FROM syn_rec
JOIN word ON syn_rec.word_id2 = word.id;


WITH RECURSIVE syn_rec(word_id1, word_id2, level) AS (
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id1 = (SELECT id FROM word WHERE chars = 'diger')
   UNION ALL
   SELECT synonym2.word_id1, synonym2.word_id2, syn_rec.level + 1
   FROM syn_rec
   JOIN synonym2 ON syn_rec.word_id2 = synonym2.word_id1
   WHERE syn_rec.level < 5
)
SELECT word.chars
FROM syn_rec
JOIN word ON syn_rec.word_id2 = word.id;


WITH RECURSIVE syn_rec(word_id1, word_id2, level) AS (
   SELECT word_id1, word_id2, 1
   FROM synonym2
   WHERE word_id2 = (SELECT id FROM word WHERE chars = 'diger')
   UNION ALL
   SELECT synonym2.word_id2, synonym2.word_id1, syn_rec.level + 1
   FROM syn_rec
   JOIN synonym2 ON syn_rec.word_id1 = synonym2.word_id2
   WHERE syn_rec.level < 5
)
SELECT word.chars
FROM syn_rec
JOIN word ON syn_rec.word_id2 = word.id;


WITH RECURSIVE syn_rec(word_id1, word_id2, level, last) AS (
   SELECT word_id1, word_id2, 1, NULL
   FROM synonym2
   WHERE word_id2 = (SELECT id FROM word WHERE chars = 'diger') AND word_id1 !=
   UNION ALL
   SELECT synonym2.word_id1, synonym2.word_id2, syn_rec.level + 1, syn_rec.last
   FROM syn_rec
   JOIN synonym2 ON syn_rec.word_id2 = synonym2.word_id2
   WHERE syn_rec.level < 5
)
SELECT *
FROM syn_rec
JOIN word ON syn_rec.word_id1 = word.id;


WITH syn_rec(word_id1, word_id2, level) AS (
    SELECT word_id1, word_id2, 1
    FROM synonym2
    WHERE word_id2 = (SELECT id FROM word WHERE chars = 'diger')
)
SELECT s.word_id1, s.word_id2, r.level + 1
FROM synonym2 s
JOIN syn_rec r
ON r.word_id2 = s.word_id2;


WITH syn_rec(word_id1, word_id2, level) AS (
    SELECT word_id1, word_id2, 1
    FROM synonym2
    WHERE word_id1 = (SELECT id FROM word WHERE chars = 'diger')
)
SELECT s.word_id1, s.word_id2, r.level + 1
FROM synonym2 s
JOIN syn_rec r
ON r.word_id1 = s.word_id2;







SELECT word_id1, word_id2, 1
FROM synonym2
WHERE word_id1 = (SELECT id FROM word WHERE chars = 'grov') OR word_id2 = (SELECT id FROM word WHERE chars = 'grov')
